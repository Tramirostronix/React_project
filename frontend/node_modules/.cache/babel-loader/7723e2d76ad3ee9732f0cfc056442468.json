{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Java\\\\Documents\\\\React_project\\\\frontend\\\\src\\\\components\\\\LocalTime.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport timezone from \"moment-timezone\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\"; //utilisation de la librairie moment et moment-time-zone pour le temps \n//https://www.npmjs.com/package/react-moment#local\n//https://www.zendevs.xyz/trucs-astuces-gestion-dates-moment-js/\n//pour la mise à jour du temps : https://fr.reactjs.org/docs/state-and-lifecycle.html\n//pour la france l'offset est de 60mn \n\nclass LocalTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flag: \"\",\n      continent: \"\",\n      city: \"\"\n    };\n  } //Conversion en valeur UTC \n  //FOnction pour actualiser automatiquement l'heure qu'il est\n\n\n  componentDidMount() {\n    this.timer = setInterval(() => this.tick(), 100);\n  }\n\n  tick() {\n    this.setState({\n      UtcTime: moment().utc()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: \"\".concat(this.props.flag, \".png\"),\n      alt: this.props.flag,\n      roundedCircle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), moment().tz(\"\".concat(this.props.continent, \"/\").concat(this.props.city)).format(\"DD/MM HH:mm\"))));\n  }\n\n}\n\nexport default LocalTime;","map":{"version":3,"sources":["C:/Users/Java/Documents/React_project/frontend/src/components/LocalTime.js"],"names":["React","moment","timezone","Container","Row","Col","Image","LocalTime","Component","constructor","props","state","flag","continent","city","componentDidMount","timer","setInterval","tick","setState","UtcTime","utc","render","tz","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,QAA2C,iBAA3C,C,CACA;AACA;AACA;AACA;AAGA;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAMH,GATmC,CAWpC;AAIA;;;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,GAAaC,WAAW,CACpB,MAAM,KAAKC,IAAL,EADc,EAEpB,GAFoB,CAAxB;AAIH;;AAEDA,EAAAA,IAAI,GAAG;AACH,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEnB,MAAM,GAAGoB,GAAT;AAAX,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,KAAD;AAAO,MAAA,GAAG,YAAK,KAAKZ,KAAL,CAAWE,IAAhB,SAAV;AACA,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,IADhB;AACsB,MAAA,aAAa,MADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAGSX,MAAM,GAAGsB,EAAT,WAAe,KAAKb,KAAL,CAAWG,SAA1B,cAAuC,KAAKH,KAAL,CAAWI,IAAlD,GAA0DU,MAA1D,CAAiE,aAAjE,CAHT,CADJ,CADJ,CADJ;AAWH;;AAxCmC;;AA2CxC,eAAejB,SAAf","sourcesContent":["import React from \"react\"\r\nimport moment from \"moment\"\r\nimport timezone from \"moment-timezone\"\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\"\r\n//utilisation de la librairie moment et moment-time-zone pour le temps \r\n//https://www.npmjs.com/package/react-moment#local\r\n//https://www.zendevs.xyz/trucs-astuces-gestion-dates-moment-js/\r\n//pour la mise à jour du temps : https://fr.reactjs.org/docs/state-and-lifecycle.html\r\n\r\n\r\n//pour la france l'offset est de 60mn \r\n\r\nclass LocalTime extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            flag: \"\",\r\n            continent: \"\",\r\n            city: \"\"\r\n        }\r\n\r\n    }\r\n\r\n    //Conversion en valeur UTC \r\n\r\n\r\n\r\n    //FOnction pour actualiser automatiquement l'heure qu'il est\r\n    componentDidMount() {\r\n        this.timer = setInterval(\r\n            () => this.tick(),\r\n            100\r\n        )\r\n    }\r\n\r\n    tick() {\r\n        this.setState({ UtcTime: moment().utc() })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                            <Image src={`${this.props.flag}.png`}\r\n                            alt={this.props.flag} roundedCircle/>                      \r\n                            {moment().tz(`${this.props.continent}/${this.props.city}`).format(\"DD/MM HH:mm\")}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LocalTime "]},"metadata":{},"sourceType":"module"}