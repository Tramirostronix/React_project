{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Java\\\\Documents\\\\React_project\\\\frontend\\\\src\\\\components\\\\Todolist.js\";\nimport React from \"react\";\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\"; //classe du Wiget Todolist\n//sources \n//https://www.youtube.com/watch?v=7Smm9pfr828\n//https://codesandbox.io/s/pkqrj851nq\n\nclass Todolist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nomTache: \"\",\n      taches: [],\n      isFieldEmpty: true\n    };\n  } //permet la saisie au clavier \n\n\n  onChange(event) {\n    console.log(event.target.value);\n\n    if (event.target.value === \"\") {\n      this.setState({\n        isFieldEmpty: true,\n        nomTache: ''\n      });\n    } else {\n      this.setState({\n        isFieldEmpty: false,\n        nomTache: event.target.value\n      });\n    }\n  } //permet d'ajouter une tache dans le tableau\n  //sans recharger la page\n  //en vidant le champs Ã  chaque ajout\n\n\n  ajouterTache(event) {\n    event.preventDefault();\n    this.setState({\n      nomTache: \"\",\n      taches: [...this.state.taches, this.state.nomTache],\n      isFieldEmpty: true,\n      nomTache: \"\"\n    });\n  }\n\n  supprimerTaches(tache) {\n    const array = this.state.taches;\n    const index = array.indexOf(tache);\n    array.splice(index, 1);\n    this.setState({\n      taches: array\n    });\n  } //affichage des taches de la TODO\n\n\n  afficherTaches() {\n    return this.state.taches.map(tache => {\n      return React.createElement(\"div\", {\n        className: \"form-control\",\n        key: tache,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, tache), React.createElement(Col, {\n        md: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.supprimerTaches.bind(this, tache),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"X\"))));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"widget3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"my-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      id: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Todolist\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.nomTache,\n      type: \"text\",\n      placeholder: \"My tasks ...\",\n      onChange: this.onChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, !this.state.isFieldEmpty && React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.ajouterTache.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Ajouter\")))), React.createElement(\"div\", {\n      className: \"List-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.afficherTaches()))));\n  }\n\n}\n\nexport default Todolist;","map":{"version":3,"sources":["C:/Users/Java/Documents/React_project/frontend/src/components/Todolist.js"],"names":["React","Container","Row","Col","Jumbotron","Todolist","Component","constructor","props","state","nomTache","taches","isFieldEmpty","onChange","event","console","log","target","value","setState","ajouterTache","preventDefault","supprimerTaches","tache","array","index","indexOf","splice","afficherTaches","map","bind","render"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\"\r\n\r\n//classe du Wiget Todolist\r\n\r\n//sources \r\n//https://www.youtube.com/watch?v=7Smm9pfr828\r\n//https://codesandbox.io/s/pkqrj851nq\r\nclass Todolist extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nomTache: \"\",\r\n            taches: [],\r\n            isFieldEmpty: true\r\n        }\r\n    }\r\n\r\n    //permet la saisie au clavier \r\n    onChange(event) {\r\n        console.log(event.target.value);\r\n        if (event.target.value === \"\") {\r\n            this.setState({ isFieldEmpty: true, nomTache: '' })\r\n\r\n        } else {\r\n            this.setState({ isFieldEmpty: false, nomTache: event.target.value })\r\n        }\r\n    }\r\n\r\n    //permet d'ajouter une tache dans le tableau\r\n    //sans recharger la page\r\n    //en vidant le champs Ã  chaque ajout\r\n    ajouterTache(event) {\r\n        event.preventDefault()\r\n        this.setState({\r\n            nomTache: \"\",\r\n            taches: [...this.state.taches, this.state.nomTache],\r\n            isFieldEmpty: true,\r\n            nomTache: \"\"\r\n        })\r\n    }\r\n\r\n\r\n    supprimerTaches(tache) {\r\n        const array = this.state.taches\r\n        const index = array.indexOf(tache)\r\n        array.splice(index, 1)\r\n        this.setState({\r\n            taches: array\r\n        })\r\n    }\r\n\r\n    //affichage des taches de la TODO\r\n    afficherTaches() {\r\n        return this.state.taches.map((tache) => {\r\n            return (\r\n                    <div className=\"form-control\" key={tache}>\r\n                        <Row>\r\n                    <Col md=\"10\">\r\n                        {tache}\r\n                        </Col>\r\n                        <Col md=\"2\">\r\n                        <button className=\"btn btn-danger\" onClick={this.supprimerTaches.bind(this, tache)}>X</button>\r\n                        </Col>\r\n                        </Row>\r\n                    </div>\r\n                \r\n\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Jumbotron className=\"widget3\">\r\n                <Container className=\"my-container\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h3 id='center'>Todolist</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <form>\r\n                            <Col>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    value={this.state.nomTache}\r\n                                    type=\"text\"\r\n                                    placeholder=\"My tasks ...\"\r\n                                    onChange={this.onChange.bind(this)}\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                {!this.state.isFieldEmpty && <button className=\"btn btn-primary\" onClick={this.ajouterTache.bind(this)}>Ajouter</button>}\r\n                            </Col>\r\n                        </form>\r\n                    </Row>\r\n                    <div className=\"List-group\">\r\n                        {this.afficherTaches()}\r\n                    </div>\r\n                </Container>\r\n                </Jumbotron>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todolist "]},"metadata":{},"sourceType":"module"}